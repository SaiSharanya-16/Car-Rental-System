import java.util.ArrayList;
import java.util.Scanner;

class Car {
    int id;
    String brand;
    String model;
    double rentalPrice;
    boolean isAvailable;

    Car(int id, String brand, String model, double rentalPrice) {
        this.id = id;
        this.brand = brand;
        this.model = model;
        this.rentalPrice = rentalPrice;
        this.isAvailable = true;
    }

    @Override
    public String toString() {
        return id + ". " + brand + " " + model + " - Rs." + rentalPrice +
                " per day - " + (isAvailable ? "Available" : "Rented");
    }
}

class Rental {
    Car car;
    int days;
    double cost;

    Rental(Car car, int days) {
        this.car = car;
        this.days = days;
        this.cost = car.rentalPrice * days;
    }

    @Override
    public String toString() {
        return car.brand + " " + car.model + " | Days: " + days + " | Cost: Rs." + cost;
    }
}

public class Main {
    public static void main(String[] args) {
        ArrayList<Car> cars = new ArrayList<>();
        ArrayList<Rental> rentalHistory = new ArrayList<>();

        // Sample Cars
        cars.add(new Car(1, "Toyota", "Innova", 2000));
        cars.add(new Car(2, "Hyundai", "i20", 1500));
        cars.add(new Car(3, "Maruti", "Swift", 1200));

        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\n--- CAR RENTAL MENU ---");
            System.out.println("1. View Cars");
            System.out.println("2. Rent a Car");
            System.out.println("3. Return a Car");
            System.out.println("4. View Rental History");
            System.out.println("5. Exit");
            System.out.print("Enter choice: ");

            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.println("\nAvailable Cars:");
                    for (Car car : cars) {
                        System.out.println(car);
                    }
                    break;

                case 2:
                    System.out.print("Enter car ID to rent: ");
                    int rentId = sc.nextInt();
                    if (rentId > 0 && rentId <= cars.size()) {
                        Car selected = cars.get(rentId - 1);
                        if (selected.isAvailable) {
                            System.out.print("Enter number of days: ");
                            int days = sc.nextInt();
                            Rental rental = new Rental(selected, days);
                            rentalHistory.add(rental);

                            selected.isAvailable = false;
                            System.out.println("\nYou rented: " + selected.brand + " " + selected.model);
                            System.out.println("Total cost: Rs." + rental.cost);
                            System.out.println("Please return after " + days + " days.");
                        } else {
                            System.out.println("Car is already rented.");
                        }
                    } else {
                        System.out.println("Invalid car ID.");
                    }
                    break;

                case 3:
                    System.out.print("Enter car ID to return: ");
                    int returnId = sc.nextInt();
                    if (returnId > 0 && returnId <= cars.size()) {
                        Car selected = cars.get(returnId - 1);
                        if (!selected.isAvailable) {
                            selected.isAvailable = true;
                            System.out.println("You returned: " + selected.brand + " " + selected.model);
                        } else {
                            System.out.println("This car was not rented.");
                        }
                    } else {
                        System.out.println("Invalid car ID.");
                    }
                    break;

                case 4:
                    System.out.println("\n--- RENTAL HISTORY ---");
                    if (rentalHistory.isEmpty()) {
                        System.out.println("No rentals yet.");
                    } else {
                        for (Rental r : rentalHistory) {
                            System.out.println(r);
                        }
                    }
                    break;

                case 5:
                    System.out.println("Thank you for using Car Rental App!");
                    sc.close();
                    return;

                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}
